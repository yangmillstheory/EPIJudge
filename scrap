from collections import deque


keypad = {
    '2': 'abc',
    '3': 'def',
    '4': 'ghi',
    '5': 'jkl',
    '6': 'mno',
    '7': 'pqr',
    '8': 'tuv',
    '9': 'wxy',
}


def from_base_10(x, b):
    '''Convert a poz. base 10 integer to a base b string.'''
    buf = deque()
    while x:
        x, rem = divmod(x, b)
        buf.appendleft(str(rem))
    return ''.join(buf)


def compute(s):
    base, res, n = 3, [], len(s)
    for i in range(pow(base, n)):
        x = from_base_10(i, base)
        x = x.zfill(n)
        res.append(''.join([keypad[s[i]][int(d)] for i, d in enumerate(x)]))
    return res


if __name__ == '__main__':
    print(compute('234'))
